#Insert blank line between shell prompts
add_newline = true
# $gcloud\
#Format
format = """
 \
$username\
$hostname\
$shlvl\
$directory\
$git_branch\
$git_state\
$git_metrics\
$git_status\
$package\
$aws\
$bun\
$c\
$cmake\
$cobol\
$conda\
$crystal\
$daml\
$dart\
$deno\
$docker_context\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$haskell\
$helm\
$java\
$julia\
$kotlin\
$lua\
$nim\
$nodejs\
$ocaml\
$perl\
$php\
$purescript\
$python\
$raku\
$ruby\
$rust\
$scala\
$swift\
$scala\
$sudo\
$fill \
$cmd_duration \
$line_break\
$character
"""

# right_format = """$cmd_duration"""

command_timeout = 1500
scan_timeout = 200

# Module settings

continuation_prompt = ""
[character]
#  ,  , ❯ ❮,  
success_symbol = " [ ](bold green)"
error_symbol = " [ ](bold red)"
vicmd_symbol = " [ ](bold green)"

[fill]
symbol = "· "
style = "bright-black dimmed"

[time]
disabled = false
use_12hr = true

[directory]
read_only = " "

[git_branch]
symbol = " "
style = "purple"

[git_state]
merge = " MERGE"

[git_metrics]
disabled = true
added_style = "bold green"
format = '[+$added]($added_style)/[-$deleted]($deleted_style) '

[git_status]
format='$ahead_behind$staged$deleted$modified$untracked$stashed'
ahead = '[⇡$count](green) '
behind = '[⇣$count](green) '
diverged ='[⇕](red) '
untracked = '[?$count](blue) '
stashed = '[*](green) '
modified = '[!$count](bold yellow) '
staged = '[+$count](bold yellow) '
deleted = '[-$count](bold red) '

[hg_branch]
symbol = " "

[memory_usage]
symbol = " "

[shlvl]
symbol = " "

[package]
symbol = " "

[aws]
format = 'with [$symbol($profile)(\($region\))(with $duration)]($style) '
symbol = "  "

[bun]
format = 'with [$symbol($version)]($style) '

[c]
format = 'with [$symbol($version(-$name))]($style) '
symbol = " "

[cmake]
format = 'with [$symbol($version)]($style) '

[cmd_duration]
format = '[祥$duration]($style dimmed) '

[cobol]
format = 'with [$symbol($version)]($style) '

[conda]
format = 'with [$symbol$environment]($style) '
symbol = " "

[crystal]
format = 'with [$symbol($version)]($style) '

[daml]
format = 'with [$symbol($version)]($style) '

[dart]
format = 'with [$symbol($version)]($style) '
symbol = " "

[deno]
format = 'with [$symbol($version)]($style) '

[docker_context]
format = 'with [$symbol$context]($style) '
symbol = " "

[dotnet]
format = 'with [$symbol($version)(🎯 $tfm)]($style) '

[elixir]
format = 'with [$symbol($version \(OTP $otp_version\))]($style) '
symbol = " "

[elm]
format = 'with [$symbol($version)]($style) '
symbol = " "

[erlang]
format = 'with [$symbol($version)]($style) '

[gcloud]
format = 'with [$symbol$account(@$domain)(\($region\))]($style) '

[golang]
format = 'with [$symbol($version)]($style) '
symbol = " "

[haskell]
format = 'with [$symbol($version)]($style) '
symbol = " "

[helm]
format = 'with [$symbol($version)]($style) '

[java]
format = 'with [$symbol($version)]($style) '
symbol = " "

[julia]
format = 'with [$symbol($version)]($style) '
symbol = " "

[kotlin]
format = 'with [$symbol($version)]($style) '

[kubernetes]
format = 'with [$symbol$context( \($namespace\))]($style) '

[lua]
format = 'with [$symbol($version)]($style) '
symbol = " "

[nim]
format = 'with [$symbol($version)]($style) '
symbol = " "

[nix_shell]
format = 'with [$symbol$state( \($name\))]($style) '
symbol = " "

[nodejs]
format = 'with [$symbol($version)]($style) '
symbol = " "

[ocaml]
format = 'with [$symbol($version)(\($switch_indicator$switch_name\))]($style) '

[openstack]
format = 'with [$symbol$cloud(\($project\))]($style) '

[perl]
format = 'with [$symbol($version)]($style) '

[php]
format = 'with [$symbol($version)]($style) '

[python]
format = 'with [${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style) '
symbol = " "

[raku]
format = 'with [$symbol($version-$vm_version)]($style) '

[red]
format = 'with [$symbol($version)]($style) '

[ruby]
format = 'with [$symbol($version)]($style) '
symbol = " "

[rust]
format = 'with [$symbol($version)]($style) '
symbol = " "

[scala]
format = 'with [$symbol($version)]($style) '

[spack]
format = 'with [$symbol$environment]($style) '
symbol = "🅢 "

[swift]
format = 'with [$symbol($version)]($style) '

[sudo]
format = 'with [as $symbol]'
